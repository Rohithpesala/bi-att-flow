Exception:
Traceback (most recent call last):
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/site-packages/pip/basecommand.py", line 215, in main
    status = self.run(options, args)
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/site-packages/pip/commands/uninstall.py", line 76, in run
    requirement_set.uninstall(auto_confirm=options.yes)
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/site-packages/pip/req/req_set.py", line 346, in uninstall
    req.uninstall(auto_confirm=auto_confirm)
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/site-packages/pip/req/req_install.py", line 754, in uninstall
    paths_to_remove.remove(auto_confirm)
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/site-packages/pip/req/req_uninstall.py", line 103, in remove
    response = ask('Proceed (y/n)? ', ('y', 'n'))
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/site-packages/pip/utils/__init__.py", line 158, in ask
    response = input(message)
EOFError: EOF when reading a line
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:82:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:82:00.0)
  0%|          | 0/2 [00:00<?, ?it/s]I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 104191 get requests, put_count=34605 evicted_count=1000 eviction_rate=0.0288976 and unsatisfied allocation rate=0.678427
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:257] Raising pool_size_limit_ from 100 to 110
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 12004 get requests, put_count=22014 evicted_count=10000 eviction_rate=0.454256 and unsatisfied allocation rate=0
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 22907 get requests, put_count=42916 evicted_count=20000 eviction_rate=0.466027 and unsatisfied allocation rate=4.36548e-05
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 34907 get requests, put_count=64916 evicted_count=30000 eviction_rate=0.462136 and unsatisfied allocation rate=2.86475e-05
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 45827 get requests, put_count=85835 evicted_count=40000 eviction_rate=0.46601 and unsatisfied allocation rate=4.36424e-05
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 57827 get requests, put_count=107835 evicted_count=50000 eviction_rate=0.463671 and unsatisfied allocation rate=3.45859e-05
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 68797 get requests, put_count=128804 evicted_count=60000 eviction_rate=0.465824 and unsatisfied allocation rate=4.36066e-05

  0%|          | 0/2 [00:00<?, ?it/s][A
 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:02<00:02,  2.44s/it]I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 113734 get requests, put_count=183261 evicted_count=70000 eviction_rate=0.381969 and unsatisfied allocation rate=0.00424675
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:257] Raising pool_size_limit_ from 110 to 121
[A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:04<00:00,  2.43s/it][A
[A
  0%|          | 0/2 [00:00<?, ?it/s][A
 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:02<00:02,  2.39s/it][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:04<00:00,  2.23s/it][A
[A 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:22<00:22, 22.34s/it]I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 9603 get requests, put_count=17616 evicted_count=8000 eviction_rate=0.454133 and unsatisfied allocation rate=0
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 21392 get requests, put_count=39405 evicted_count=18000 eviction_rate=0.456795 and unsatisfied allocation rate=0
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 32506 get requests, put_count=60518 evicted_count=28000 eviction_rate=0.462672 and unsatisfied allocation rate=3.07636e-05
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 44160 get requests, put_count=82172 evicted_count=38000 eviction_rate=0.462445 and unsatisfied allocation rate=2.26449e-05
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 55422 get requests, put_count=103433 evicted_count=48000 eviction_rate=0.464069 and unsatisfied allocation rate=3.60868e-05
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 66941 get requests, put_count=124952 evicted_count=58000 eviction_rate=0.464178 and unsatisfied allocation rate=2.98771e-05
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:245] PoolAllocator: After 80551 get requests, put_count=148561 evicted_count=68000 eviction_rate=0.457724 and unsatisfied allocation rate=3.72435e-05

  0%|          | 0/2 [00:00<?, ?it/s][A
 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:02<00:02,  2.70s/it][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:04<00:00,  2.48s/it][A
[A
  0%|          | 0/2 [00:00<?, ?it/s][A
 50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:01<00:01,  1.77s/it][A
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:04<00:00,  1.96s/it][A
[A100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:41<00:00, 21.28s/it]
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally
I tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: 
name: GeForce GTX TITAN X
major: 5 minor: 2 memoryClockRate (GHz) 1.076
pciBusID 0000:82:00.0
Total memory: 11.95GiB
Free memory: 11.84GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:82:00.0)
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
Traceback (most recent call last):
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 972, in _do_call
    return fn(*args)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 954, in _run_fn
    status, run_metadata)
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/contextlib.py", line 66, in __exit__
    next(self.gen)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/framework/errors.py", line 463, in raise_exception_on_not_ok_status
    pywrap_tensorflow.TF_GetCode(status))
tensorflow.python.framework.errors.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
	 [[Node: save_1/restore_slice_17/_25 = _Recv[client_terminated=false, recv_device="/job:localhost/replica:0/task:0/gpu:0", send_device="/job:localhost/replica:0/task:0/cpu:0", send_device_incarnation=1, tensor_name="edge_128_save_1/restore_slice_17", tensor_type=DT_FLOAT, _device="/job:localhost/replica:0/task:0/gpu:0"]()]]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/runpy.py", line 184, in _run_module_as_main
    "__main__", mod_spec)
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/usaxena/work/s18/696/bidaf/basic/cli.py", line 111, in <module>
    tf.app.run()
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/platform/app.py", line 30, in run
    sys.exit(main(sys.argv[:1] + flags_passthrough))
  File "/home/usaxena/work/s18/696/bidaf/basic/cli.py", line 108, in main
    m(config)
  File "/home/usaxena/work/s18/696/bidaf/basic/main.py", line 25, in main
    _test(config)
  File "/home/usaxena/work/s18/696/bidaf/basic/main.py", line 150, in _test
    graph_handler.initialize(sess)
  File "/home/usaxena/work/s18/696/bidaf/basic/graph_handler.py", line 25, in initialize
    self._load(sess)
  File "/home/usaxena/work/s18/696/bidaf/basic/graph_handler.py", line 54, in _load
    saver.restore(sess, save_path)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1345, in restore
    {self.saver_def.filename_tensor_name: save_path})
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 717, in run
    run_metadata_ptr)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 915, in _run
    feed_dict_string, options, run_metadata)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 965, in _do_run
    target_list, options, run_metadata)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 985, in _do_call
    raise type(e)(node_def, op, message)
tensorflow.python.framework.errors.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
	 [[Node: save_1/restore_slice_17/_25 = _Recv[client_terminated=false, recv_device="/job:localhost/replica:0/task:0/gpu:0", send_device="/job:localhost/replica:0/task:0/cpu:0", send_device_incarnation=1, tensor_name="edge_128_save_1/restore_slice_17", tensor_type=DT_FLOAT, _device="/job:localhost/replica:0/task:0/gpu:0"]()]]

Caused by op 'save_1/Assign_3', defined at:
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/runpy.py", line 184, in _run_module_as_main
    "__main__", mod_spec)
  File "/cm/shared/apps/python/3.5.2/lib/python3.5/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/usaxena/work/s18/696/bidaf/basic/cli.py", line 111, in <module>
    tf.app.run()
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/platform/app.py", line 30, in run
    sys.exit(main(sys.argv[:1] + flags_passthrough))
  File "/home/usaxena/work/s18/696/bidaf/basic/cli.py", line 108, in main
    m(config)
  File "/home/usaxena/work/s18/696/bidaf/basic/main.py", line 25, in main
    _test(config)
  File "/home/usaxena/work/s18/696/bidaf/basic/main.py", line 150, in _test
    graph_handler.initialize(sess)
  File "/home/usaxena/work/s18/696/bidaf/basic/graph_handler.py", line 25, in initialize
    self._load(sess)
  File "/home/usaxena/work/s18/696/bidaf/basic/graph_handler.py", line 42, in _load
    saver = tf.train.Saver(vars_, max_to_keep=config.max_to_keep)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 986, in __init__
    self.build()
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1015, in build
    restore_sequentially=self._restore_sequentially)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 620, in build
    restore_sequentially, reshape)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 369, in _AddRestoreOps
    assign_ops.append(saveable.restore(tensors, shapes))
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 212, in restore
    self.op.get_shape().is_fully_defined())
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_state_ops.py", line 45, in assign
    use_locking=use_locking, name=name)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py", line 749, in apply_op
    op_def=op_def)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 2380, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/home/usaxena/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 1298, in __init__
    self._traceback = _extract_stack()

InvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [126,8] rhs shape= [121,8]
	 [[Node: save_1/Assign_3 = Assign[T=DT_FLOAT, _class=["loc:@emb/emb_var/char_emb_mat"], use_locking=true, validate_shape=true, _device="/job:localhost/replica:0/task:0/cpu:0"](emb/emb_var/char_emb_mat, save_1/restore_slice_3)]]
	 [[Node: save_1/restore_slice_17/_25 = _Recv[client_terminated=false, recv_device="/job:localhost/replica:0/task:0/gpu:0", send_device="/job:localhost/replica:0/task:0/cpu:0", send_device_incarnation=1, tensor_name="edge_128_save_1/restore_slice_17", tensor_type=DT_FLOAT, _device="/job:localhost/replica:0/task:0/gpu:0"]()]]

